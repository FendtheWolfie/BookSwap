<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BookSwap - Kategorie</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
    />
  </head>
  <body>
    <header>
     <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <!-- Logo -->
            <a class="navbar-brand" href="#">
                <img src="images/logo-transparent-svg.svg" alt="BookSwap Logo" height="50"> <!-- Replace with your SVG logo -->
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="inseraterstellen.html">
                            <i class="bi bi-plus"></i>
                            Angebot erstellen</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="login.html" class="btn btn-primary">
                            <i class="bi bi-person"></i>
                            Anmelden
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Search Bar -->
    <div class="container mt-4">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Suche nach Artikel">
            <button class="btn btn-primary" type="button">
                <i class="bi bi-search"></i>
            </button>
        </div>
    </div>

    <!-- Categories -->
    <div class="container mt-3">
        <ul class="nav nav-pills justify-content-center">
            <li class="nav-item">
                <a class="btn btn-primary" data-bs-toggle="offcanvas" href="#sidebar">
                  <i class="bi bi-list"></i>
                  Alle Kategorien
                </a>

                <a href="#sidebar" class="d-block mt-3" data-bs-toggle="offcanvas" 
                role="button" aria-controls="sidebar"></a>
                
              
              </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Mathematik">Mathe</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Deutsch">Deutsch</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Englisch">Englisch</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Französisch">Französisch</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Geografie">Geografie</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Geschichte">Geschichte</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Wirtschaft">Wirtschaft</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="kategorie.html?category=Recht">Recht</a>
            </li>
        </ul>
    </div>
    </header>

    <div class="container mt-4">
      <h2 id="category-name"></h2>
      <div class="row row-cols-1 row-cols-md-5 g-4" id="category-section"></div>
    </div>

    <script>
      // Function to get the query parameter value from the URL
      function getQueryParam(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
      }

      // Function to create a book card
      function createCard(title, price, year, condition, level) {
        return `
          <div class="col">
            <div class="card">
              <div class="card-body">
                <div class="bg-secondary" style="height: 150px;"></div>
                <h5 class="card-title mt-3">${title}</h5>
                <p class="card-text">Preis: ${price} CHF</p>
                <p class="card-text">Erscheinungsjahr: ${year}</p>
                <p class="card-text">Zustand: ${condition}</p>
                <p class="card-text">Niveau: ${level}</p>
              </div>
            </div>
          </div>
        `;
      }

      // Function to populate books based on the selected category
      function populateCategoryBooks(category) {
        const categories = {
          Mathematik: [
            { title: "Math Book 1", price: 20, year: 2015, condition: "Wie neu", level: "Realschule" },
            { title: "Math Book 2", price: 25, year: 2018, condition: "Guter Zustand", level: "Sekundarschule" },
            { title: "Math Book 3", price: 30, year: 2020, condition: "Akzeptabel", level: "Kantonsschule" },
            { title: "Math Book 4", price: 15, year: 2012, condition: "Stark gebraucht", level: "Hochschule" },
            { title: "Math Book 5", price: 10, year: 2021, condition: "Wie neu", level: "Universität" },
          ],
          Deutsch: [
            { title: "German Book 1", price: 18, year: 2013, condition: "Wie neu", level: "Realschule" },
            { title: "German Book 2", price: 22, year: 2015, condition: "Guter Zustand", level: "Sekundarschule" },
            { title: "German Book 3", price: 28, year: 2018, condition: "Akzeptabel", level: "Kantonsschule" },
            { title: "German Book 4", price: 12, year: 2012, condition: "Stark gebraucht", level: "Hochschule" },
            { title: "German Book 5", price: 16, year: 2020, condition: "Wie neu", level: "Universität" },
          ],
          Englisch: [
            { title: "English Book 1", price: 20, year: 2014, condition: "Guter Zustand", level: "Realschule" },
            { title: "English Book 2", price: 22, year: 2016, condition: "Akzeptabel", level: "Sekundarschule" },
            { title: "English Book 3", price: 18, year: 2017, condition: "Wie neu", level: "Kantonsschule" },
            { title: "English Book 4", price: 30, year: 2021, condition: "Stark gebraucht", level: "Hochschule" },
            { title: "English Book 5", price: 25, year: 2019, condition: "Guter Zustand", level: "Universität" },
          ],
              Französisch: [
            { title: "French Book 1", price: 25, year: 2015, condition: "Wie neu", level: "Realschule" },
            { title: "French Book 2", price: 20, year: 2013, condition: "Akzeptabel", level: "Sekundarschule" },
            { title: "French Book 3", price: 22, year: 2019, condition: "Guter Zustand", level: "Kantonsschule" },
            { title: "French Book 4", price: 18, year: 2016, condition: "Stark gebraucht", level: "Hochschule" },
            { title: "French Book 5", price: 15, year: 2018, condition: "Wie neu", level: "Universität" },
          ],
          Wirtschaft: [
            { title: "Economics Book 1", price: 30, year: 2017, condition: "Guter Zustand", level: "Realschule" },
            { title: "Economics Book 2", price: 28, year: 2015, condition: "Akzeptabel", level: "Sekundarschule" },
            { title: "Economics Book 3", price: 25, year: 2018, condition: "Wie neu", level: "Kantonsschule" },
            { title: "Economics Book 4", price: 20, year: 2021, condition: "Stark gebraucht", level: "Hochschule" },
            { title: "Economics Book 5", price: 22, year: 2019, condition: "Guter Zustand", level: "Universität" },
          ],
         Geografie: [
            { title: "Geography Book 1", price: 18, year: 2013, condition: "Wie neu", level: "Realschule" },
            { title: "Geography Book 2", price: 22, year: 2015, condition: "Guter Zustand", level: "Sekundarschule" },
            { title: "Geography Book 3", price: 30, year: 2017, condition: "Akzeptabel", level: "Kantonsschule" },
            { title: "Geography Book 4", price: 15, year: 2018, condition: "Stark gebraucht", level: "Hochschule" },
            { title: "Geography Book 5", price: 25, year: 2020, condition: "Wie neu", level: "Universität" },
           ],
          Geschichte: [
            { title: "History Book 1", price: 20, year: 2014, condition: "Guter Zustand", level: "Realschule" },
            { title: "History Book 2", price: 18, year: 2016, condition: "Akzeptabel", level: "Sekundarschule" },
            { title: "History Book 3", price: 28, year: 2018, condition: "Wie neu", level: "Kantonsschule" },
            { title: "History Book 4", price: 25, year: 2021, condition: "Stark gebraucht", level: "Hochschule" },
            { title: "History Book 5", price: 30, year: 2019, condition: "Guter Zustand", level: "Universität" },
          ],
          Recht: [
              { title: "Law Book 1", price: 35, year: 2015, condition: "Wie neu", level: "Realschule" },
              { title: "Law Book 2", price: 30, year: 2017, condition: "Guter Zustand", level: "Sekundarschule" },
              { title: "Law Book 3", price: 40, year: 2018, condition: "Akzeptabel", level: "Kantonsschule" },
              { title: "Law Book 4", price: 25, year: 2021, condition: "Stark gebraucht", level: "Hochschule" },
              { title: "Law Book 5", price: 18, year: 2019, condition: "Wie neu", level: "Universität" },
            ],
          };
          

        const categoryBooks = categories[category];
        if (!categoryBooks) {
          document.getElementById("category-section").innerHTML = "Keine Kategorie gefunden";
          return;
        }

        const section = document.getElementById("category-section");
        section.innerHTML = "";
        categoryBooks.forEach((book) => {
          section.innerHTML += createCard(book.title, book.price, book.year, book.condition, book.level);
        });
      }

      // Get the category from the query parameter
      const category = getQueryParam("category");

      // Set the category name in the header
      document.getElementById("category-name").textContent = category || "Unbekannte Kategorie";

      // Populate books on DOMContentLoaded
      document.addEventListener("DOMContentLoaded", () => {
        populateCategoryBooks(category);
      });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
</html>